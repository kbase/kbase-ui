daemon off;
error_log /dev/stdout info;
worker_processes auto;
pid /var/run/nginx.pid;

events {
	worker_connections 256;
	# multi_accept on;
}

http {
	sendfile off;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
  proxy_headers_hash_bucket_size 256;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

    #
    # A minimal proxying configuration for running kbase-ui through an insecure proxy
    # against a given environment.
    #

    {{ if .Env.deploy_ui_hostname }}

    server {
      listen 80 default_server;
      listen [::]:80 default_server;

      server_name {{ .Env.deploy_ui_hostname }};

      location / {
         root /kb/deployment/services/kbase-ui;
         index index.html;
      }

       # Needed for running narratives
      location /narrative {
        include /etc/nginx/cors.conf;
        proxy_pass https://{{ .Env.deploy_hostname }}/narrative;
        # Uncomment the following lines for a narrative deployed
        # within the proxy's vm.
        #proxy_pass http://localhost:8888/narrative;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_set_header Origin http://localhost;
        proxy_set_header Host localhost;
      }
    }

    {{ end }}

    server {
      listen 80 default_server;
      listen [::]:80 default_server;
      server_name {{ .Env.deploy_hostname }};

      # Proxy all service calls, including auth2, to the real CI

      location /services/auth {
        # The cookie path rewriting is just for auth2
        {{ if .Env.deploy_ui_hostname }}
        include /etc/nginx/cors.conf;
        {{ end }}
        proxy_cookie_path /login /services/auth/login;
        proxy_cookie_path /link /services/auth/link;
        proxy_pass https://{{ .Env.deploy_hostname }}/services/auth;
        client_max_body_size 300M;
      }

      location /services {
        {{ if .Env.deploy_ui_hostname }}
        include /etc/nginx/cors.conf;
        {{ end }}
        proxy_pass https://{{ .Env.deploy_hostname }}/services;
        client_max_body_size 300M;
      }


      # TODO: need to pin the docker container to a host name, 
      # otherwise you need to inspect the container to find out the ip 
      # address to use below
      # location /services/jgi_gateway/rpc {
      #   {{ if .Env.deploy_ui_hostname }}
      #   include /etc/nginx/cors.conf;
      #   {{ end }}
      #   include /etc/nginx/cors.conf;
      #   proxy_pass http://172.17.0.3:5000;
      # }

      # Needed for dynamic service calls
      location /dynserv {
        {{ if .Env.deploy_ui_hostname }}
        include /etc/nginx/cors.conf;
        {{ end }}
        proxy_pass https://{{ .Env.deploy_hostname }}/dynserv;
      }

    
      # Proxy all non-services to the local kbase-ui running in the vm

      {{ if not .Env.deploy_ui_hostname }}

      location / {
         ##
         # Gzip settings
         ##
        #  gzip on;
        #  gzip_vary on;
        #  gzip_min_length 10240;
        #  gzip_proxied expired no-cache no-store private auth;
        #  gzip_types text/plain text/css text/xml text/javascript;
        #  gzip_types application/json application/javascript application/x-javascript application/xml;
        #  gzip_disable "MSIE [1-6]\.";

         root /kb/deployment/services/kbase-ui;

         index index.html;
      }

       # Needed for running narratives
      location /narrative {
        proxy_pass https://{{ .Env.deploy_hostname }}/narrative;
        # Uncomment the following lines for a narrative deployed
        # within the proxy's vm.
        # proxy_pass http://localhost:8888/narrative;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_set_header Origin http://localhost;
        proxy_set_header Host localhost;
      }

      {{ end }}
    }
}
