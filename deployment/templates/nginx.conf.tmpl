daemon off;
error_log /dev/stdout info;
worker_processes auto;
pid /var/run/nginx.pid;
user kbmodule;

# Build Environment Variables:
# UI_DOMAIN = {{ .Env.UI_DOMAIN }}
# KBASE_UI_DOMAIN = {{ .Env.KBASE_UI_DOMAIN }}
# BASE_PATH = {{ .Env.BASE_PATH }}
# NGINX_LOG_SYSLOG = {{ .Env.NGINX_LOG_SYSLOG }}
# NGINX_LOG_STDOUT = {{ .Env.NGINX_LOG_STDOUT }}
# NGINX_LOG_STDERR = {{ .Env.NGINX_LOG_STDERR }}
# NGINX_LOG_LEVEL = {{ .Env.NGINX_LOG_LEVEL }}
# NGINX_LISTEN = {{ .Env.NGINX_LISTEN }}
# NGINX_SERVER_NAME = {{ .Env.NGINX_SERVER_NAME }}

{{ $subhost := not (eq .Env.UI_DOMAIN .Env.KBASE_UI_DOMAIN) }}

{{ if $subhost }}
# Configured for SUBHOST {{ .Env.KBASE_UI_DOMAIN }}
{{ else }}
# Configured for SAME HOST
{{ end }}

events {
    worker_connections 256;
    # multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    # Always log to the logfiles, and default errors to stderr, with access logs to syslog and stdout
    # as optional

    # If the template is passed an nginx syslog path via nginx_log_syslog env var, log to there
    {{ if (default "" .Env.NGINX_LOG_SYSLOG) }}
    access_log {{ .Env.NGINX_LOG_SYSLOG }} combined;
    {{ end }}
    # If nginx_log_stdout env var isn't false or empty, log to stdout
    {{ if isTrue (default "true" .Env.NGINX_LOG_STDOUT) }}
    access_log /dev/stdout;
    {{ end }}
    access_log /var/log/nginx/access.log;

    {{ if isTrue (default "true" .Env.NGINX_LOG_STDERR) }}
    error_log /dev/stderr {{ default "error" .Env.NGINX_LOG_LEVEL }};
    {{ end }}
    error_log /var/log/nginx/error.log {{ default "error" .Env.NGINX_LOG_LEVEL }};

    ##
    # Gzip settings
    ##
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/json application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    server {
        listen      {{ default "80" .Env.NGINX_LISTEN }} default_server;
        server_name {{ default "localhost" .Env.NGINX_SERVER_NAME }};

        # Matches the root - the index page.
        # TODO: this won't work if the base path is empty - fix that.
        location = /{{ default "" .Env.BASE_PATH }}/ {
            allow all;
            # this ensures that a downstream cache service will revalidate.
            add_header Cache-Control 'no-cache';

            {{ if $subhost }}
            add_header Content-Security-Policy "frame-ancestors https://{{ .Env.UI_DOMAIN }}  https://{{ .Env.KBASE_UI_DOMAIN }} ;" always; 
            {{ else }}
            add_header Content-Security-Policy "frame-ancestors 'self';" always; 
            add_header X-Frame-Options "SAMEORIGIN" always;
            {{ end }}

            root /kb/deployment/app;
            try_files /index.html =404;
        }
  
        location ~ /{{ default "" .Env.BASE_PATH }} {
            # Ensure that index.html is invoked even if a path is
            # specified and doesn't exist.
            # try_files $uri /$uri /index.html;
            ssi_silent_errors off;
            allow all;
            # this ensures that a downstream cache service will revalidate.
            add_header Cache-Control 'no-cache';
            # add_header Cache-Control 'no-store';
            # expires 0;

            {{ if $subhost }}
            add_header Content-Security-Policy "frame-ancestors https://{{ .Env.UI_DOMAIN }}  https://{{ .Env.KBASE_UI_DOMAIN }} ;" always; 
            {{ else }}
            add_header Content-Security-Policy "frame-ancestors 'self';" always; 
            add_header X-Frame-Options "SAMEORIGIN" always;
            {{ end }}

            root /kb/deployment/app;
            rewrite ^/{{ default "" .Env.BASE_PATH }}(/.*)$ $1 break;  
        }
        
        # Used as a simple endpoint to determine the health of the connection
        # to kbase.
        location {{ default "" .Env.BASE_PATH }}/__ping__ {
            default_type text/html;
            return 204;
        }

        # Used by a performance measuring tool, about/connection
        # Inside the __perf__ directory are files of specific sizes 
        # which can be fetched, and their download time measured as a
        # rough estimate of network performance.
        location {{ default "" .Env.BASE_PATH }}/data/__perf__ {
            gzip off;
            add_header Cache-Control 'no-cache';
            root /kb/deployment/app;
        }

        # Catches references to old "modules/plugins" path; used by
        # some plugins to fetch resources from within themselves.
        # We just map it to the new canonical location for plugins.
        location {{ default "" .Env.BASE_PATH }}/modules/plugins/ {
            ssi_silent_errors off;
            allow all;
            add_header Cache-Control 'no-cache';
            alias /kb/deployment/app/plugins/;
        }
    }
}
