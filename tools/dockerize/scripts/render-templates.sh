#!/usr/bin/env bash

# source "${DIR}/scripts/host/development-env-vars.bash"

# set -e 
# echo "Rendering kbase-ui config file from template for environment '${DEPLOY_ENV}' using base app dir '${DIR}'"
# echo "Parameters (Environment Variables):"
# echo ""
# echo "Just for development"
# echo "--------------------" 
# echo "  DIR=${DIR}"
# echo ""
# echo "Required"
# echo "--------"
# echo ""
# echo "URL Bases"
# echo "  UI_DOMAIN=${UI_DOMAIN}"
# echo ""
# echo "Feature Switches"
# echo "  FEATURE_SWITCHES_ENABLED=${FEATURE_SWITCHES_ENABLED}"
# echo "  FEATURE_SWITCHES_DISABLED=${FEATURE_SWITCHES_DISABLED}"
# echo ""

if [ -z "$DIR" ]
then
    echo "The environment variable 'DIR' must be set first"
    exit 1
fi

export ENV_FILE="${DIR}/.devcontainer/runtime.env"

if [ ! -f "$ENV_FILE" ]
then
    echo "The env file '${ENV_FILE}' must be generated first"
    exit 1
fi


# Generate the deployment configs that are normally generated by the entrypoint in the
# Dockerfile. Note that for development we don't actually use nginx.conf, but we
# generate it here so we can inspect it.
docker compose \
    -f ${DIR}/tools/dockerize/docker-compose.yml \
    run \
    --rm \
    dockerize \
    -template /app/deployment/templates/config.json.tmpl:/app/build/deploy/config.json \
    -template /app/deployment/templates/nginx.conf.tmpl:/app/build/deploy/nginx.conf
