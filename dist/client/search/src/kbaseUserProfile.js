define(["q","kb.utils","md5","kb.client.user_profile","kb.config","kb.session"],function(a,b,c,d,e,f){"use strict";var g=Object.create({},{init:{value:function(a){if(this.config=e[e.setup],!a.username)throw"Cannot create a profile object without a username";if(this.username=a.username,f.isLoggedIn()){if(!e.hasConfig("user_profile_url"))throw"The user profile client url is not defined";this.userProfileClient=new d(e.getConfig("user_profile_url"),{token:f.getAuthToken()})}return this.userRecordHistory=[],this}},loadProfile:{value:function(c){return a.Promise(function(a,c,d){this.userProfileClient?b.promise(this.userProfileClient,"get_user_profile",[this.username]).then(function(b){b[0]?(this.userRecord=b[0],a(this)):(this.userRecord=null,a(this))}.bind(this))["catch"](function(a){c(a)}):(this.userRecord=null,a(this))}.bind(this))}},getProfile:{value:function(){return this.userRecord}},deleteUserdata:{value:function(){return this.userRecord.profile.userdata=null,this.userRecord.profile.metadata.modified=(new Date).toISOString(),b.promise(this.userProfileClient,"set_user_profile",{profile:this.userRecord})}},saveProfile:{value:function(){return b.promise(this.userProfileClient,"set_user_profile",{profile:this.userRecord})}},updateProfile:{value:function(a){var c=b.merge({},this.userRecord),d=b.merge(c,a);10===this.userRecordHistory.length&&this.userRecordHistory.pop(),this.userRecordHistory.unshift({userRecord:this.userRecord,status:this.getProfileStatus(),completionStatus:this.calcProfileCompletion().status}),this.userRecord=d}},getProfileStatus:{value:function(){var a;return a=this.userRecord?this.userRecord.user?this.userRecord.profile&&this.userRecord.profile.userdata?"profile":"stub":this.userRecord.profile.account?"accountonly":"error":"none"}},createProfile:{value:function(){return a.Promise(function(a,c,d){b.promise(this.userProfileClient,"lookup_globus_user",[this.username]).then(function(d){if(!d||!d[this.username])return void c("No user account found for "+this.username);var e=d[this.username];this.userRecord=this.makeProfile({username:e.userName,realname:e.fullName,email:e.email,account:e,createdBy:"user"}),b.promise(this.userProfileClient,"set_user_profile",{profile:this.userRecord}).then(function(){a()})["catch"](function(a){console.log("ERROR SAVING USER PROFILE: "+a),console.log(a),c(a)})}.bind(this))["catch"](function(a){c(a)})}.bind(this))}},createStubProfile:{value:function(c){return a.Promise(function(a,d,e){b.promise(this.userProfileClient,"lookup_globus_user",[this.username]).then(function(e){if(!e||!e[this.username])return void d("No user account found for "+this.username);var f=e[this.username];this.userRecord=this.makeStubProfile({username:f.userName,realname:f.fullName,account:f,createdBy:c.createdBy}),b.promise(this.userProfileClient,"set_user_profile",{profile:this.userRecord}).then(function(){a(this)}.bind(this))["catch"](function(a){console.log("ERROR SAVING USER PROFILE: "+a),console.log(a),d(a)})}.bind(this))["catch"](function(a){d(a)})}.bind(this))}},makeStubProfile:{value:function(a){var b={user:{username:a.username,realname:a.realname},profile:{metadata:{createdBy:a.createdBy,created:(new Date).toISOString()},account:a.account,preferences:{},userdata:null}};return b}},makeProfile:{value:function(a){var b=this.makeStubProfile(a);return b.profile.userdata={},a.email&&(b.profile.userdata.email=a.email),b}},getAvatarURL:{value:function(a){var b=this.getProp("profile.userdata.avatar.gravatar_default"),c=this.getProp("profile.userdata.email");return b&&c?this.makeGravatarURL(c,a.size||100,a.rating||"pg",b):"assets/images/nouserpic.png"}},makeGravatarURL:{value:function(a,b,d,e){var f=c(a),g="https://www.gravatar.com/avatar/"+f+"?s="+b+"&amp;r="+d+"&d="+e;return g}},getUserProfileSchema:{value:function(){return{type:"object",properties:{user:{type:"object",title:"User",properties:{realname:{type:"string",title:"Real Name",maxLength:100},thumbnail:{type:"string"}},required:["realname"]},profile:{type:"object",properties:{userdata:{type:"object",properties:{title:{type:"string",title:"Title"},suffix:{type:"string",title:"Suffix"},location:{type:"string",title:"Geographic Location",maxLength:25},email:{type:"string",title:"E-Mail Address",format:"email"},personal_statement:{type:"string",title:"Personal Statement"},user_class:{type:"string",title:"User Type"},roles:{type:"array",title:"Roles",items:{type:"string"}},avatar:{type:"object",properties:{gravatar_default:{type:"string",title:"Gravatar Default Setting"}}},affiliations:{type:"array",title:"Affiliation",items:{type:"object",properties:{title:{type:"string",title:"Title"},institution:{type:"string",title:"Institution"},start_year:{type:"integer",title:"Start Year",minimum:1900,maximum:2100},end_year:{type:"integer",title:"End Year",minimum:1900,maximum:2100}},required:["title","institution","start_year"]}}},required:["email","user_class","roles","location"]}}}}}}},getProp:{value:function(a,c){return this.userRecord?b.getProp(this.userRecord,a,c):c}},nthHistory:{value:function(a){return a<=this.userRecordHistory.length?this.userRecordHistory[a-1]:void 0}},calcProfileCompletion:{value:function(){var a=null,c=this.getProfileStatus();switch(c){case"profile":break;case"stub":return{status:"stub"};case"accountonly":return{status:"error"};case"error":return{status:"error"};case"none":return{status:"notfound"};default:return{status:"error"}}for(var d=["user.username","profile.userdata.email","profile.userdata.user_class","profile.userdata.location"],e=["user.username","profile.userdata.location","profile.userdata.email","profile.userdata.user_class","profile.userdata.roles","profile.userdata.affiliations","profile.userdata.personal_statement"],f=this.getUserProfileSchema(),g=[],h=0;h<d.length;h++){var i=b.getProp(this.userRecord,d[h]);if(b.isBlank(i)){a="requiredincomplete";var j=b.getSchemaNode(f,d[h]);g.push(j)}}if(a)return{status:a,message:"The following required profile fields are missing: "+g.join(", "),missingFields:g};for(var h=0;h<e.length;h++){var i=b.getProp(this.userRecord,e[h]);if("profile.userdata.personal_statement"===e[h],b.isBlank(i)){var j=b.getSchemaNode(f,e[h]);g.push(j)}}var k=Math.round(100*(e.length-g.length)/e.length);return 100>k?{status:"incomplete",message:"The profile is complete, but could be richer.",percentComplete:k,missingFields:g}:{status:"complete",message:"Congratulations, your profile is complete!"}}}});return g});