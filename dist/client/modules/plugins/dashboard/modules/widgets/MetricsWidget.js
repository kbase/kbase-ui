define(["bluebird","kb_dashboard_widget_base"],function(a,b){"use strict";return Object.create(b,{init:{value:function(a){return a.name="MetricsWidget",a.title="Metrics",this.DashboardWidget_init(a),this}},afterStart:{value:function(){this.viewState.listen("narratives",{onSet:function(a){this.setState("narratives",a),this.calcNarrativeMetrics(a.count),this.calcSharingNarrativeMetrics(a.sharingCount)}.bind(this),onError:function(a){this.setError(a)}.bind(this)})}},setup:{value:function(){return this}},calcNarrativeMetrics:{value:function(a){var b=this.getState("narrativesStats"),c=b.histogram,d=100/c.binned.length,e=Math.max.apply(null,c.binned),f=Math.min.apply(null,c.binned);e=Math.max(e,a),f=Math.min(f,a);for(var g,h=e+e/10,i=c.bins.map(function(a){return a.width=d,a.height=Math.round(100*a.count/h),a}),j=0;j<c.bins.length;j++){var k=c.bins[j];if(a>=k.lower&&(k.upperInclusive&&a<=k.upper||a<k.upper||j===c.bins.length-1)){g=j,j===c.bins.length-1&&a>k.upper&&(k.upper=a,k.label="("+k.lower+"-"+k.upper+"]");break}}if(void 0!==g)var l={scale:g*d+d/2,value:a,bin:g,side:g<c.bins.length/2?"right":"left"};else var l={scale:0,value:0};this.setState("histogram.narratives",{maxBinSize:e,minBinSize:f,chartMax:h,binData:c,chart:i,user:l,stats:b})}},calcSharedNarrativeMetrics:{value:function(a){var b=this.getState("sharedNarrativesStats"),c=b.histogram,d=100/c.binned.length,e=Math.max.apply(null,c.binned),f=Math.min.apply(null,c.binned);e=Math.max(e,a),f=Math.min(f,a);for(var g,h=e+e/10,i=c.bins.map(function(a){return a.width=d,a.height=Math.round(100*a.count/h),a}),j=0;j<c.bins.length;j++){var k=c.bins[j];if(a>=k.lower&&(k.upperInclusive&&a<=k.upper||a<k.upper||j===c.bins.length-1)){g=j,j===c.bins.length-1&&a>k.upper&&(k.upper=a,k.label="("+k.lower+"-"+k.upper+"]");break}}if(void 0!==g)var l={scale:g*d+d/2,value:a,bin:g,side:g<c.bins.length/2?"right":"left"};else var l={scale:0,value:0};this.setState("histogram.sharedNarratives",{maxBinSize:e,minBinSize:f,chartMax:h,binData:c,chart:i,user:l,stats:b})}},calcSharingNarrativeMetrics:{value:function(a){var b=this.getState("sharingNarrativesStats"),c=b.histogram,d=100/c.binned.length,e=Math.max.apply(null,c.binned),f=Math.min.apply(null,c.binned);e=Math.max(e,a),f=Math.min(f,a);for(var g,h=e+e/10,i=c.bins.map(function(a){return a.width=d,a.height=Math.round(100*a.count/h),a}),j=0;j<c.bins.length;j++){var k=c.bins[j];if(a>=k.lower&&(k.upperInclusive&&a<=k.upper||a<k.upper||j===c.bins.length-1)){g=j,j===c.bins.length-1&&a>k.upper&&(k.upper=a,k.label="("+k.lower+"-"+k.upper+"]");break}}if(void 0!==g)var l={scale:g*d+d/2,value:a,bin:g,side:g<c.bins.length/2?"right":"left"};else var l={scale:0,value:0};this.setState("histogram.sharingNarratives",{maxBinSize:e,minBinSize:f,chartMax:h,binData:c,chart:i,user:l,stats:b})}},calcSharedNarrativeMetricsx:{value:function(a){var b=this.getState("sharedNarrativesStats").histogram,c=100/b.binned.length,d=Math.max.apply(null,b.binned),e=Math.min.apply(null,b.binned);d=Math.max(d,a),e=Math.min(e,a);for(var f,g=d+d/10,h=b.bins.map(function(a){return a.width=c,a.height=Math.round(100*a.count/g),a}),i=0;i<b.bins.length;i++){var j=b.bins[i];if(a>=j.lower&&(j.upperInclusive&&a<=j.upper||a<j.upper)){f=i;break}}if(void 0!==f)var k={scale:f*c+c/2,value:a};else var k={scale:0,value:0};this.setState("histogram.sharedNarratives",{maxBinSize:d,minBinSize:e,chartMax:g,binData:b,chart:h,user:k})}},setInitialState:{value:function(){return new a(function(b,c){a.all([this.runtime.service("data").getJson({path:"metrics",file:"narrative_histogram"}),this.runtime.service("data").getJson({path:"metrics",file:"narrative_sharing_histogram"}),this.viewState.whenItem("narratives",6e4)]).then(function(a){this.setState("narrativesStats",a[0]),this.setState("sharingNarrativesStats",a[1]),this.setState("narratives",a[2]),this.calcNarrativeMetrics(a[2].count),this.calcSharingNarrativeMetrics(a[2].sharingCount),b()}.bind(this))["catch"](function(a){c(a)})}.bind(this))}}})});