define(["jquery","kb_dataview_googlepalette","kb/service/client/workspace","kb/common/html","kb_dataview_communities_graph","kb_dataview_communities_plot","kb/widget/legacy/authenticatedWidget","kb/widget/legacy/tabs","datatables_bootstrap"],function(a,b,c,d,e,f){"use strict";a.KBWidget({name:"MetagenomeView",parent:"kbaseAuthenticatedWidget",version:"1.0.0",token:null,options:{id:null,ws:null},init:function(a){return this._super(a),this},render:function(){var g=this,h=this.uuidv4(),i=this.$elem;if(i.empty(),null===g.token)return void i.append("<div>[Error] You're not logged in</div>");i.append(d.loading("loading data..."));var j=new c(this.runtime.getConfig("services.workspace.url"),{token:this.runtime.service("session").getAuthToken()});return j.get_objects([{ref:g.options.ws+"/"+g.options.id}],function(c){if(i.empty(),0===c.length){var j="[Error] Object "+g.options.id+" does not exist in workspace "+g.options.ws;i.append("<div><p>"+j+">/p></div>")}else{var k=c[0].data,l=k.statistics.sequence_stats,m="Amplicon"===k.sequence_type?!0:!1,n=l.hasOwnProperty("sequence_count_raw")?parseFloat(l.sequence_count_raw):0,o=l.hasOwnProperty("sequence_count_preprocessed_rna")?parseFloat(l.sequence_count_preprocessed_rna):0,p=l.hasOwnProperty("sequence_count_preprocessed")?parseFloat(l.sequence_count_preprocessed):0,q=l.hasOwnProperty("sequence_count_sims_rna")?parseFloat(l.sequence_count_sims_rna):0,r=l.hasOwnProperty("cluster_count_processed_rna")?parseFloat(l.cluster_count_processed_rna):0,s=l.hasOwnProperty("clustered_sequence_count_processed_rna")?parseFloat(l.clustered_sequence_count_processed_rna):0,t=l.hasOwnProperty("read_count_annotated")?parseFloat(l.read_count_annotated):0,u=l.hasOwnProperty("read_count_processed_aa")?parseFloat(l.read_count_processed_aa):0,v=n-p,w=q?q-r+s:0,x=t&&t>w?t-w:0,y=u-x,z=n-(v+y+x+w);if(v+w>n){var A=v+w-n;z=A>z?0:z-A}if(m)v=n-o,y=0,x=0,z=n-(v+w);else{if(0>z&&(z=0),v+z+y+x+w>n){var A=v+z+y+x+w-n;z=A>z?0:z-A}if(0===z&&v+y+x+w>n){var A=v+y+x+w-n;y=A>y?0:y-A}if(0===z&&0===y&&v+x+w>n){var A=v+x+w-n;w=A>w?0:w-A}}var B=a('<div id="'+h+'tab-content">');i.append(B),B.kbaseTabs({canDelete:!1,tabs:[]});var C=a('<div id="'+h+'overview">');B.kbaseTabs("addTab",{tab:"Overview",content:C,canDelete:!1,show:!0});var D="<h4>Info</h4>";D+='<p><table class="table table-striped table-bordered" style="width: 50%;">',D+='<tr><td style="padding-right: 25px; width: 165px;"><b>Metagenome ID</b></td><td>'+k.id+"</td></tr>",D+='<tr><td style="padding-right: 25px; width: 165px;"><b>Metagenome Name</b></td><td>'+k.name+"</td></tr>",D+='<tr><td style="padding-right: 25px; width: 165px;"><b>Project ID</b></td><td>'+k.metadata.project.id+"</td></tr>",D+='<tr><td style="padding-right: 25px; width: 165px;"><b>Project Name</b></td><td>'+k.metadata.project.name+"</td></tr>",D+='<tr><td style="padding-right: 25px; width: 165px;"><b>PI</b></td><td>'+k.metadata.project.data.PI_firstname+" "+k.metadata.project.data.PI_lastname+"</td></tr>",D+='<tr><td style="padding-right: 25px; width: 165px;"><b>Organization</b></td><td>'+k.metadata.project.data.PI_organization+"</td></tr>",D+='<tr><td style="padding-right: 25px; width: 165px;"><b>Sequence Type</b></td><td>'+k.sequence_type+"</td></tr>",D+="</table></p>",D+="<h4>Summary</h4>",D+="<p>The dataset "+k.name+" was uploaded on "+k.created+" and contains "+l.sequence_count_raw+" sequences totaling "+l.bp_count_raw+" basepairs with an average length of "+l.average_length_raw+" bps.</p>";var E=" Of the remainder, "+x+" sequences ("+(x/n*100).toFixed(2)+"%) contain predicted proteins with known functions and "+y+" sequences ("+(y/n*100).toFixed(2)+"%) contain predicted proteins with unknown function.",F=" "+z+" sequences ("+(z/n*100).toFixed(2)+"%) have no rRNA genes"+(m?".":" or predicted proteins");D+="<p>"+v+" sequences ("+(v/n*100).toFixed(2)+"%) failed to pass the QC pipeline. Of the sequences that passed QC, "+w+" sequences ("+(w/n*100).toFixed(2)+"%) containe ribosomal RNA genes."+(m?"":E)+F+"</p>",a("#"+h+"overview").append(D);var G=a('<div id="'+h+'metadata" style="width: 95%;">');B.kbaseTabs("addTab",{tab:"Metadata",content:G,canDelete:!1,show:!0});var H=[],I=["project","sample","library","env_package"];for(var J in I)if(k.metadata[I[J]])for(var K in k.metadata[I[J]].data)H.push([I[J],K,k.metadata[I[J]].data[K]]);var L={columns:["Category","Field","Value"],rows:H,"class":"table table-striped"},M=d.makeTable(L);a("#"+h+"metadata").html(M),a("#"+L.generated.id).dataTable();var C=a('<div id="'+h+'stats">');B.kbaseTabs("addTab",{tab:"Statistics",content:C,canDelete:!1,show:!1});var N='<p><table class="table table-striped table-bordered" style="width: 65%;">';N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Upload: bp Count</b></td><td>'+l.bp_count_raw+" bp</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Upload: Sequences Count</b></td><td>'+l.sequence_count_raw+"</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Upload: Mean Sequence Length</b></td><td>'+l.average_length_raw+" ± "+l.standard_deviation_length_raw+" bp</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Upload: Mean GC percent</b></td><td>'+l.average_gc_content_raw+" ± "+l.standard_deviation_gc_content_raw+" %</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Artificial Duplicate Reads: Sequence Count</b></td><td>'+l.sequence_count_dereplication_removed+"</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Post QC: bp Count</b></td><td>'+l.bp_count_preprocessed+"</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Post QC: Sequences Count</b></td><td>'+l.sequence_count_preprocessed+"</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Post QC: Mean Sequence Length</b></td><td>'+l.average_length_preprocessed+" ± "+l.standard_deviation_length_preprocessed+" bp</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Post QC: Mean GC percent</b></td><td>'+l.average_gc_content_preprocessed+" ± "+l.standard_deviation_gc_content_preprocessed+" %</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Processed: Predicted Protein Features</b></td><td>'+l.sequence_count_processed_aa+"</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Processed: Predicted rRNA Features</b></td><td>'+l.sequence_count_processed_rna+"</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Alignment: Identified Protein Features</b></td><td>'+l.sequence_count_sims_aa+"</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Alignment: Identified rRNA Features</b></td><td>'+l.sequence_count_sims_rna+"</td></tr>",N+='<tr><td style="padding-right: 25px; width: 325px;"><b>Annotation: Identified Functional Categories</b></td><td>'+l.sequence_count_ontology+"</td></tr>",N+="</table></p>",a("#"+h+"stats").append(N);var O=k.statistics.qc.drisee.percents.columns,P=k.statistics.qc.drisee.percents.data;if(!m&&O&&P&&O.length>0&&P.length>0){var Q=a('<div id="'+h+'drisee" style="width: 95%;">');B.kbaseTabs("addTab",{tab:"DRISEE",content:Q,canDelete:!1,show:!0});for(var R=0,S=[1,2,3,4,5,6,7],T=[],U=[],V=[],W=[],X=0,Y=b(S.length),Z=0;Z<S.length;Z++){T.push({name:O[S[Z]],color:Y[Z]}),X=Math.max(X,O[S[Z]].length);for(var $=[],_=0;_<P.length;_++)$.push({x:parseFloat(P[_][R]),y:parseFloat(P[_][S[Z]])}),V.push(parseFloat(P[_][R])),W.push(parseFloat(P[_][S[Z]]));U.push($)}var aa=750,ba=300,ca=10*X,da=23*T.length,ea=aa+ca,fa=da>ba?Math.min(da,ba+ba/2):ba,ga=f.create({target:document.getElementById(h+"drisee"),data:{series:T,points:U},x_titleOffset:40,y_titleOffset:60,x_title:"bp position",y_title:"percent error",x_min:Math.min.apply(Math,V),x_max:Math.max.apply(Math,V),y_min:Math.min.apply(Math,W),y_max:Math.max.apply(Math,W),show_legend:!0,show_dots:!1,connected:!0,legendArea:[aa+20,20,ca,da],chartArea:[70,20,aa,ba],width:ea+40,height:fa+45});ga.render()}var ha=k.statistics.qc.kmer["15_mer"].data;if(!m&&ha&&ha.length>0){var ia=a('<div id="'+h+'kmer" style="width: 95%;">');B.kbaseTabs("addTab",{tab:"Kmer Profile",content:ia,canDelete:!1,show:!0});for(var $=[],V=[],W=[],Z=0;Z<ha.length;Z+=2)$.push({x:parseFloat(ha[Z][3]),y:parseFloat(ha[Z][0])}),V.push(parseFloat(ha[Z][3])),W.push(parseFloat(ha[Z][0]));var aa=750,ba=300,ja=Math.max.apply(Math,W);ja+=.25*ja;var ka=ja.toString().indexOf(".")||ja.toString.length;ka=Math.pow(10,ka-1),ja=Math.floor((ja+ka)/ka)*ka,console.log("series"),console.log($);var la=f.create({target:document.getElementById(h+"kmer"),data:{series:[{name:""}],points:[$]},x_titleOffset:40,y_titleOffset:60,x_title:"sequence size",y_title:"kmer coverage",x_scale:"log",y_scale:"log",x_min:Math.min.apply(Math,V),x_max:Math.max.apply(Math,V),y_min:0,y_max:ja,show_legend:!1,show_dots:!1,connected:!0,chartArea:[70,20,aa,ba],width:aa+40,height:ba+45});la.render()}var ma=k.statistics.qc.bp_profile.percents.columns,na=k.statistics.qc.bp_profile.percents.data,oa=a('<div id="'+h+'bp_plot" style="width: 95%;">');B.kbaseTabs("addTab",{tab:"Nucleotide Histogram",content:oa,canDelete:!1,show:!0});for(var pa=ma.slice(1),Y=b(pa.length),qa=[],R=0;R<pa.length;R++)qa.push({name:pa[R],data:[],fill:Y[R]});for(var Z=0;Z<na.length;Z++)for(var _=1;_<na[Z].length;_++)qa[_-1].data.push(parseFloat(na[Z][_]));var aa=750,ba=300,ca=15,da=23*qa.length,ea=aa+ca,fa=da>ba?Math.min(da,ba+ba/2):ba,ra=e.create({target:document.getElementById(h+"bp_plot"),data:qa,x_title:"bp "+ma[0],y_title:"Percent bp",type:"stackedArea",x_tick_interval:parseInt(na.length/50),x_labeled_tick_interval:parseInt(na.length/10),show_legend:!0,legendArea:[aa+20,20,ca,da],chartArea:[70,20,aa,ba],width:ea+40,height:fa+45});ra.render(),B.kbaseTabs("showTab","Overview")}},function(b){i.empty();var c=a("<div>");c.append(a("<p>").css({padding:"10px 20px"}).text("[Error] "+b.error.message)),i.append(c)}),g},loggedInCallback:function(a,b){return this.token=b.token,this.render(),this},loggedOutCallback:function(a,b){return this.token=null,this.render(),this},uuidv4:function(a,b){for(b=a="";a++<36;b+=51*a&52?(15^a?8^Math.random()*(20^a?16:4):4).toString(16):"-");return b}})});