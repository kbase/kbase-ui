define(["jquery","kb_dataview_communities_jquerySvg"],function(a){"use strict";var b={about:{name:"heatmap",title:"Heatmap",author:"Tobias Paczian",version:"1.0",requires:["jquery.svg.js"]},defaults:{width:200,height:200,tree_height:50,tree_width:50,legend_height:80,legend_width:100,row_text_size:15,col_text_size:15,min_cell_height:19,selectedRows:[],selectedColumns:[],cells:[]},options:[{text:[{name:"row_text_size",type:"int",description:"font size of the row text in pixel",title:"row font size"},{name:"col_text_size",type:"int",description:"font size of the column text in pixel",title:"column font size"},{name:"min_cell_height",type:"int",description:"minimum height of a cell",title:"minimum cell height"}]},{layout:[{name:"height",type:"int",description:"height of the plot",title:"height"},{name:"width",type:"int",description:"width of the plot",title:"width"},{name:"tree_height",type:"int",description:"height of the dendogram",title:"dendogram height"},{name:"tree_width",type:"int",description:"width of the dendogram",title:"dendogram width"},{name:"legend_height",type:"int",description:"height of the legend",title:"legend height"},{name:"legend_width",type:"int",description:"width of the legend",title:"legend width"}]}],exampleData:function(){return{columns:["4441619.3","4441656.4","4441620.3"],rows:["Eukaryota","unassigned","Bacteria","Archaea"],data:[[.338159580408187,.717179237742824,.514052821211353],[.238159580408187,.317179237742824,.114052821211353],[.553202346761363,.614080873307415,.555096325148052],[.996159994861707,.940468112695288,1]]}},create:function(b){var c={settings:{}};return a.extend(!0,c,this),a.extend(!0,c.settings,this.defaults,b),c},render:function(){var b=this.settings.data.rows.length*this.settings.min_cell_height+this.settings.tree_height+this.settings.legend_height;this.settings.height<b&&(this.settings.height=b);var c=this.settings.data.columns.length*this.settings.min_cell_height+this.settings.tree_width+this.settings.legend_width;this.settings.width<c&&(this.settings.width=c);var d=this.settings.target;d.innerHTML="<div class='heatmap-container'><div class='heatmap_div'></div></div>";var e=a(d).find(".heatmap_div");e.attr("style","width: "+this.settings.width+"px; height: "+this.settings.height+"px;");var f=this;return a(d).find(".heatmap-container").on("click",'[data-type="label"]',function(){var b=parseInt(a(this).attr("data-row"),10),c=parseInt(a(this).attr("data-dir"),10);f.toggleSelected(b,c)}),a(d).find(".heatmap-container").on("click",'[data-type="cell"]',function(){var b=parseInt(a(this).attr("data-row"),10),c=parseInt(a(this).attr("data-col"),10),d=parseFloat(a(this).attr("data-value"));f.cellClick(b,c,d,this)}),a(d).find(".heatmap-container").on("mouseover",'[data-type="cell"]',function(){var b=parseInt(a(this).attr("data-row"),10),c=parseInt(a(this).attr("data-col"),10),d=parseFloat(a(this).attr("data-value"));f.cellHover(1,b,c,d,this)}),a(d).find(".heatmap-container").on("mouseout",'[data-type="cell"]',function(){var b=parseInt(a(this).attr("data-row"),10),c=parseInt(a(this).attr("data-col"),10),d=parseFloat(a(this).attr("data-value"));f.cellHover(0,b,c,d,this)}),e.svg(),this.drawImage(e.svg("get")),this},drawImage:function(a){var b=this.settings.data.rows.length,c=this.settings.data.columns.length,d=parseInt((this.settings.width-this.settings.legend_width-this.settings.tree_width-5)/c,10);this.settings.boxwidth=d;var e=parseInt((this.settings.height-this.settings.legend_height-this.settings.tree_height-5)/b,10);this.settings.boxheight=e;var f=parseInt(this.settings.width-this.settings.legend_width-this.settings.tree_width-5,10),g=(parseInt(this.settings.height-this.settings.legend_height-this.settings.tree_height-5,10),0),h=0,i=0,j=0,k=0,l=0,m={fill:"red",strokeWidth:1,stroke:"black"};if(this.settings.data.hasOwnProperty("coldend")&&this.settings.data.hasOwnProperty("colindex"))this.settings.data.colcluster=this.settings.data.coldend;else{var n=this.cluster(this.transpose(this.settings.data.data));this.settings.data.colcluster=n[0],this.settings.data.colindex=n[1]}if(this.settings.data.hasOwnProperty("rowdend")&&this.settings.data.hasOwnProperty("rowindex"))this.settings.data.rowcluster=this.settings.data.rowdend;else{var o=this.cluster(this.settings.data.data);this.settings.data.rowcluster=o[0],this.settings.data.rowindex=o[1]}this.drawDendogram(a,0),this.drawDendogram(a,1);for(var p=0;p<this.settings.data.data.length;p++){var q=this.settings.tree_width+f+5,r=this.settings.tree_height+this.settings.legend_height+(e*(p+1)-parseInt((e-this.settings.row_text_size)/2))-2,s="black";this.settings.selectedRows[p]&&(s="blue"),a.text(null,q,r,""+this.settings.data.rows[this.settings.data.rowindex[p]-1],{fill:s,fontSize:this.settings.row_text_size+"px","data-type":"label","data-row":String(p),"data-dir":"0",cursor:"pointer"}),a.text(null,q,r,""+this.settings.data.rows[this.settings.data.rowindex[p]-1],{fill:s,fontSize:this.settings.row_text_size+"px","data-type":"label","data-row":String(p),"data-dir":"0",cursor:"pointer"}),this.settings.cells.push([]);for(var t=0;t<this.settings.data.data[p].length;t++){if(0===p){var u=this.settings.tree_width+d*t+parseInt((d-this.settings.col_text_size)/2)+12,v=this.settings.legend_height-5;s="black",this.settings.selectedColumns[t]&&(s="blue"),a.text(null,u,v,this.settings.data.columns[this.settings.data.colindex[t]-1],{fill:s,fontSize:this.settings.col_text_size+"px",transform:"rotate(-90, "+u+", "+v+")","data-type":"label","data-row":String(t),"data-dir":"1",cursor:"pointer"})}g=t*d+this.settings.tree_width,k=d,h=p*e+this.settings.tree_height+this.settings.legend_height,l=e;var w="black",x=2*this.settings.data.data[this.settings.data.rowindex[p]-1][this.settings.data.colindex[t]-1]-1,y=parseInt(255*Math.abs(x));w=0>x?"rgb("+y+",0,0)":"rgb(0,"+y+",0)",m.fill=w,m["data-type"]="cell",m["data-row"]=String(p),m["data-col"]=String(t),m["data-value"]=String(x),this.settings.cells[p][t]=a.rect(null,g,h,k,l,i,j,m)}}},drawDendogram:function(a,b){var c=b?this.settings.tree_width:this.settings.tree_height,d=b?this.settings.data.rowcluster:this.settings.data.colcluster,e=b?this.settings.boxheight:this.settings.boxwidth,f=b?this.settings.tree_height:this.settings.tree_width,g=this.settings.legend_height+this.settings.tree_height,h=parseInt(c/d.depth),i="";if(b){f++;for(var j=0;j<d.depth;j++){for(var k=0+g,l=0;l<d[j].length;l++){var m=d[j][l];i+="M"+f+","+parseInt(k+e*m.a/2)+"l-"+parseInt(h)+",0",m.hasOwnProperty("b")&&(i+="l0,"+parseInt(e*(m.a/2)+e*(m.b/2))+"l"+parseInt(h)+",0"),k+=m.b?(m.a+m.b)*e:m.a*e}f-=h}}else for(var j=0;j<d.depth;j++){for(var k=0+f,l=0;l<d[j].length;l++){var m=d[j][l];i+="M"+parseInt(k+e*m.a/2)+","+g+"l0,-"+parseInt(h),m.hasOwnProperty("b")&&(i+="l"+parseInt(e*(m.a/2)+e*(m.b/2))+",0l0,"+parseInt(h)),k+=m.b?(m.a+m.b)*e:m.a*e}g-=h}a.path(null,i,{fill:"none",stroke:"black"})},toggleSelected:function(a,b){b?"function"==typeof this.settings.colClicked?this.settings.colClicked({col:a,label:this.settings.data.cols[this.settings.data.colindex[a]-1]}):this.settings.selectedColumns[a]?this.settings.selectedColumns[a]=0:this.settings.selectedColumns[a]=1:"function"==typeof this.settings.rowClicked?this.settings.rowClicked({row:a,label:this.settings.data.rows[this.settings.data.rowindex[a]-1]}):this.settings.selectedRows[a]?this.settings.selectedRows[a]=0:this.settings.selectedRows[a]=1,this.render()},cellClick:function(a,b,c,d){"function"==typeof this.settings.cellClicked&&this.settings.cellClicked({row:a,col:b,value:c,cell:d})},cellHover:function(a,b,c,d,e){"function"==typeof this.settings.cellHovered&&this.settings.cellHovered({over:a,row:b,col:c,value:d,cell:e})},clustsort:function(a,b){return a.amin-b.amin},distance:function(a){for(var b={},c=0;c<a.length;c++)b[c]={};for(var c=0;c<a.length;c++)for(var d=0;d<a.length;d++)if(!(c>=d)){for(var e=0,f=0;f<a[c].data[0].length;f++)e+=Math.pow(a[c].data[0][f]-a[d].data[0][f],2);b[c][d]=Math.pow(e,.5)}return b},transpose:function(a){for(var b=[],c=0;c<a.length;c++)for(var d=0;d<a[c].length;d++)0===c&&b.push([]),b[d][c]=a[c][d];return b},cluster:function(a){for(var b=a.length,c={},d=[],e=0;e<a.length;e++)d.push({points:[e],data:[a[e]],basepoints:[e],level:[0]}),c[e]=!0;for(var f,g,h=this.distance(d);b>1;){var i=!1;for(var e in h)if(h.hasOwnProperty(e)){for(var j in h[e])if(h[e].hasOwnProperty(j)&&c[e]&&c[j]){f=h[e][j],g=[e,j],i=!0;break}if(i)break}for(var e in h)if(h.hasOwnProperty(e))for(var j in h[e])h[e].hasOwnProperty(j)&&c[e]&&c[j]&&h[e][j]<f&&(g=[e,j],f=h[e][j]);c[g[0]]=!1,c[g[1]]=!1,b--,c[d.length]=!0;for(var k=0,l=0,j=0;2>j;j++)for(var e=0;e<d[g[j]].data.length;e++)0===j?k+=d[g[j]].data[e]:l+=d[g[j]].data[e];for(var m=[],n=[],j=0;2>j;j++){var o=j;k>l&&(o=0===j?1:0);for(var e=0;e<d[g[o]].data.length;e++)m.push(d[g[o]].data[e]);for(var e=0;e<d[g[o]].basepoints.length;e++)n.push(d[g[o]].basepoints[e])}var p=g[0],q=g[1];if(k>l){var r=p;p=q,q=r}p=parseInt(p),q=parseInt(q),d.push({points:[p,q],data:m,basepoints:n,level:[Math.max.apply(null,d[p].level)+1,Math.max.apply(null,d[q].level)+1]});for(var s=[],j=0;2>j;j++)for(var e=0;e<d[g[j]].data.length;e++)for(var o=0;o<d[g[j]].data[e].length;o++)0===j&&0===e&&(s[o]=0),s[o]+=d[g[j]].data[e][o];for(var e=0;e<s.length;e++)s[e]=s[e]/(d[p].data.length+d[q].data.length);var t=d.length-1;h[t]={};for(var j=0;t>j;j++){for(var u=[],e=0;e<d[j].data.length;e++)for(var o=0;o<d[j].data[e].length;o++)0===e&&(u[o]=0),u[o]+=d[j].data[e][o];for(var e=0;e<u.length;e++)u[e]=u[e]/d[j].data.length;for(var v=0,e=0;e<s.length;e++)v+=Math.pow(s[e]-u[e],2);h[j][t]=Math.pow(v,.5)}}for(var w=[],x=d.length-1,e=0;e<d[x].basepoints.length;e++)w.push(d[x].basepoints[e]+1);for(var y={},e=0;e<w.length;e++)y[w[e]]=e;for(var z=0,e=0;e<d.length;e++)d[e].level[0]&&d[e].level[0]>z&&(z=d[e].level[0]),d[e].level[1]&&d[e].level[1]>z&&(z=d[e].level[1]);for(var A={depth:z},e=0;e<A.depth;e++)A[e]=[];for(var e=a.length;e<d.length;e++){var B=Math.max.apply(null,d[e].level)-1;if(A[B].push({a:d[d[e].points[0]].data.length,b:d[d[e].points[1]].data.length,amin:y[Math.min.apply(null,d[d[e].points[0]].basepoints)+1]}),d[e].level[0]!==d[e].level[1]){var C=0;d[e].level[1]<d[e].level[0]&&(C=1);for(var j=0;j<Math.abs(d[e].level[0]-d[e].level[1]);j++)A[B-(j+1)].push({a:d[d[e].points[C]].data.length,amin:y[Math.min.apply(null,d[d[e].points[C]].basepoints)+1]})}}for(var e in A)A.hasOwnProperty(e)&&!isNaN(e)&&A[e].sort(this.clustsort);return[A,w]}};return b});