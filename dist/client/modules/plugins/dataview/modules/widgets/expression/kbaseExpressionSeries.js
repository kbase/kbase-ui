define(["jquery","bluebird","kb/common/html","kb/common/utils","kb/service/client/workspace","kb/service/workspaceClient","kb/widget/legacy/widget","kb/widget/legacy/tabs","datatables_bootstrap"],function(a,b,c,d,e,f){"use strict";a.KBWidget({name:"kbaseExpressionSeries",parent:"kbaseWidget",version:"1.0.0",options:{color:"black"},init:function(g){function h(e,f){return b["try"](function(){k.empty();var f=k.kbTabs({tabs:[{name:"Overview",active:!0},{name:"ExpressionSeries",content:c.loading()}]}),g=[{key:"wsid"},{key:"ws"},{key:"kbid"},{key:"source"},{key:"genome"},{key:"type"},{key:"errors"},{key:"owner"},{key:"date"}],h=e[0][0],j=Object.keys(h.data.genome_expression_sample_ids_map)[0],l={wsid:h.info[1],ws:h.info[7],kbid:h.data.regulome_id,source:h.data.source,genome:j,type:h.data.type,errors:h.data.importErrors,owner:h.creator,date:h.created},m=["Name","Workspace","KBID","Source","Genome","Type","Errors","Owner","Creation date"],n=d.objTable({obj:l,keys:g,labels:m}),o=h.data.genome_expression_sample_ids_map[j],p=[];f.tabContent("Overview").append(n);for(var q=0;q<o.length;q++)p.push({ref:o[q]});return b.resolve(i.get_objects(p)).then(function(b){var c=a('<table class="table table-bordered table-striped" style="width: 100%;">');f.setContent({name:"ExpressionSeries",content:c});var d={sPaginationType:"full_numbers",iDisplayLength:10,aaData:b,aaSorting:[[0,"asc"]],aoColumns:[{sTitle:"Gene Expression Samples",mData:function(a){return a.data.id}}],oLanguage:{sEmptyTable:"No objects in workspace",sSearch:"Search: "}};c.dataTable(d)})})}this._super(g);var i=new e(this.runtime.getConfig("services.workspace.url"),{token:this.runtime.service("session").getAuthToken()}),j=Object.create(f).init({url:this.runtime.getConfig("services.workspace.url"),authToken:this.runtime.service("session").getAuthToken()}),k=(g.name,this.$elem);return k.html(c.loading()),i.get_objects([{workspace:g.ws,name:g.name}]).then(function(a){var c=a[0].refs;return new b.all([a,j.translateRefs(c)])}).then(function(a,b){return h(a,b)})["catch"](function(a){console.log("ERROR"),console.log(a),k.append('<div class="alert alert-danger">'+a.error.message+"</div>")}),this}})});