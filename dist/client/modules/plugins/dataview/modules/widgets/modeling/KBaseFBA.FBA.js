define(["jquery","bluebird","kb_dataview_widget_modeling_objects","kb/service/client/workspace"],function(a,b,c,d){"use strict";function e(e){var f=this;this.runtime=e.runtime,this.modeltabs=e,this.tabList=[{key:"overview",name:"Overview",type:"verticaltbl",rows:[{label:"ID",key:"wsid"},{label:"Object type",key:"objecttype",type:"typelink"},{label:"Owner",key:"owner"},{label:"Version",key:"instance"},{label:"Mod-date",key:"moddate"},{label:"Objective value",key:"objective"},{label:"Objective function",key:"objectivefunction"},{label:"Model",key:"model",type:"wstype"},{label:"Media",key:"media",type:"wstype"},{label:"Regulome",key:"regulome",type:"wstype"},{label:"Prom Constraint",key:"promconstraint",type:"wstype"},{label:"Expression",key:"expression",type:"wstype"},{label:"Single KO",key:"singleko"},{label:"Number reactions",key:"numreactions"},{label:"Number compounds",key:"numcompounds"},{label:"Gene KO",key:"numgeneko"},{label:"Reaction KO",key:"numrxnko"},{label:"Custom bounds",key:"numcpdbounds"},{label:"Custom constraints",key:"numconstraints"},{label:"Media supplements",key:"numaddnlcpds"},{label:"Uptake limits",key:"uptakelimits"},{label:"Uptake limits",key:"uptakelimits"},{label:"Minimize fluxes?",key:"minfluxes",type:"boolean"},{label:"Find minimal media?",key:"findminmedia",type:"boolean"},{label:"Minimize reactions?",key:"minimizerxn",type:"boolean"},{label:"All reactions reversible?",key:"allreversible",type:"boolean"},{label:"Thermodynamic constraints?",key:"simplethermo",type:"boolean"},{label:"Objective fraction",key:"objfraction"}]},{key:"modelreactions",name:"Reaction fluxes",type:"dataTable",columns:[{label:"Reaction",type:"tabLink",linkformat:"dispIDCompart",key:"id",method:"ReactionTab",width:"15%"},{label:"Name",key:"name"},{label:"Flux",key:"flux",visible:1},{label:"Min flux<br>(Lower bound)",key:"disp_low_flux",visible:1},{label:"Max flux<br>(Upper bound)",key:"disp_high_flux",visible:1},{label:"Class",key:"fluxClass",visible:1},{label:"Equation",key:"equation",type:"tabLink",linkformat:"linkequation"},{label:"Genes",key:"genes",type:"tabLinkArray",method:"GeneTab"}]},{key:"compoundFluxes",name:"Exchange fluxes",type:"dataTable",columns:[{label:"Compound",key:"id",type:"tabLink",linkformat:"dispIDCompart",method:"CompoundTab",width:"15%"},{label:"Exchange reaction",key:"exchangerxn",visible:1},{label:"Exchange flux",key:"uptake",visible:1},{label:"Min exchange flux<br>(Lower bound)",key:"disp_low_flux",visible:1},{label:"Max exchange flux<br>(Upper bound)",key:"disp_high_flux",visible:1},{label:"Class",key:"fluxClass",visible:1},{label:"Formula",key:"formula"},{label:"Charge",key:"charge"},{label:"Compartment",key:"cmpkbid",type:"tabLink",method:"CompartmentTab",linkformat:"dispID"}]},{key:"modelgenes",name:"Genes",visible:1,columns:[{label:"Gene",key:"id",type:"tabLink",method:"GeneTab",linkformat:"dispID",visible:1},{label:"Gene knocked out",key:"ko",visible:1},{label:"Fraction of growth with KO",key:"growthFraction",visible:0}]},{key:"biomasscpds",name:"Biomass",type:"dataTable",columns:[{label:"Biomass",key:"biomass",type:"tabLink",method:"BiomassTab",linkformat:"dispID"},{label:"Biomass flux",key:"bioflux"},{label:"Name",key:"name"},{label:"Coefficient",key:"coefficient"},{label:"Compartment",key:"cmpkbid",type:"tabLink",linkformat:"dispID",method:"CompartmentTab"},{label:"Max production",key:"maxprod",visible:0}]}],this.setMetadata=function(b){this.workspace=b[7],this.objName=b[1],this.overview={wsid:b[7]+"/"+b[1],ws:b[7],obj_name:b[1],objecttype:b[2],owner:b[5],instance:b[4],moddate:b[3]},this.usermeta={},"Model"in b[10]&&(this.usermeta={objective:b[10].Objective,model:b[10].Model,media:b[10].Media,singleko:b[10]["Combination deletions"],numreactions:b[10]["Number reaction variables"],numcompounds:b[10]["Number compound variables"],numgeneko:b[10]["Number gene KO"],numrxnko:b[10]["Number reaction KO"],numcpdbounds:b[10]["Number compound bounds"],numconstraints:b[10]["Number constraints"],numaddnlcpds:b[10]["Number additional compounds"]},a.extend(this.overview,this.usermeta))},this.formatObject=function(){this.usermeta.model=f.data.fbamodel_ref,this.usermeta.media=f.data.media_ref,this.usermeta.objective=f.data.objectiveValue,this.usermeta.minfluxes=f.data.fluxMinimization,this.usermeta.findminmedia=f.data.findMinimalMedia,this.usermeta.minimizerxn=f.data.minimize_reactions,this.usermeta.allreversible=f.data.allReversible,this.usermeta.simplethermo=f.data.simpleThermoConstraints,this.usermeta.objfraction=f.data.objectiveConstraintFraction,this.usermeta.regulome=f.data.regulome_ref,this.usermeta.promconstraint=f.data.promconstraint_ref,this.usermeta.expression=f.data.tintlesample_ref,this.usermeta.phenotypeset=f.data.phenotypeset_ref,this.usermeta.phenotypesimulationset=f.data.phenotypesimulationset_ref,this.usermeta.singleko=f.data.comboDeletions,this.usermeta.defaultmaxflux=f.data.defaultMaxFlux,this.usermeta.defaultmaxdrain=f.data.defaultMaxDrainFlux,this.usermeta.defaultmindrain=f.data.defaultMinDrainFlux,this.usermeta.phenotypesimulationset=f.data.phenotypesimulationset_ref,this.usermeta.uptakelimits="";for(var a in f.data.uptakelimits)this.usermeta.uptakelimits.length>0&&(this.usermeta.uptakelimits+="<br>"),this.usermeta.uptakelimits+=a+":"+this.uptakelimits[a];this.usermeta.objectivefunction="Minimize{",1===f.data.maximizeObjective&&(this.usermeta.objectivefunction="Maximize{");for(var a in f.data.compoundflux_objterms)this.usermeta.objectivefunction+=" ("+f.data.compoundflux_objterms[a]+") "+a;for(var a in f.data.reactionflux_objterms)this.usermeta.objectivefunction+=" ("+f.data.reactionflux_objterms[a]+") "+a;for(var a in f.data.biomassflux_objterms)this.usermeta.objectivefunction+=" ("+f.data.biomassflux_objterms[a]+") "+a;this.usermeta.objectivefunction+="}",this.modelreactions=this.model.modelreactions,this.modelcompounds=this.model.modelcompounds,this.biomasses=this.model.biomasses,this.biomasscpds=this.model.biomasscpds,this.modelgenes=this.model.modelgenes,this.FBAConstraints=f.data.FBAConstraints,this.FBAMinimalMediaResults=f.data.FBAMinimalMediaResults,this.FBAMinimalReactionsResults=f.data.FBAMinimalReactionsResults,this.FBAMetaboliteProductionResults=f.data.FBAMetaboliteProductionResults,this.rxnhash={};for(var b=0;b<f.data.FBAReactionVariables.length;b++){var c=f.data.FBAReactionVariables[b].modelreaction_ref.split("/").pop();f.data.FBAReactionVariables[b].ko=0,this.rxnhash[c]=f.data.FBAReactionVariables[b]}for(var b=0;b<f.data.reactionKO_refs.length;b++){var c=f.data.reactionKO_refs[b].split("/").pop();this.rxnhash[c].ko=1}this.cpdhash={};for(var b=0;b<f.data.FBACompoundVariables.length;b++){var d=f.data.FBACompoundVariables[b].modelcompound_ref.split("/").pop();f.data.FBACompoundVariables[b].additionalcpd=0,this.cpdhash[d]=f.data.FBACompoundVariables[b]}for(var b=0;b<f.data.additionalCpd_refs.length;b++){var d=f.data.additionalCpd_refs[b].split("/").pop();this.cpdhash[d].additionalcpd=1}this.biohash={};for(var b=0;b<f.data.FBABiomassVariables.length;b++){var e=f.data.FBABiomassVariables[b].biomass_ref.split("/").pop();this.biohash[e]=f.data.FBABiomassVariables[b]}this.maxpod=0,this.metprodhash={};for(var b=0;b<this.FBAMetaboliteProductionResults.length;b++){this.tabList[4].columns[5].visible=1;var g=f.data.FBAMetaboliteProductionResults[b],d=g.modelcompound_ref.split("/").pop();this.metprodhash[d]=g}this.genehash={};for(var b=0;b<this.modelgenes.length;b++)this.genehash[this.modelgenes[b].id]=this.modelgenes[b],this.genehash[this.modelgenes[b].id].ko=0;this.delhash={};for(var b=0;b<f.data.FBADeletionResults.length;b++){var h=f.data.FBADeletionResults[b].feature_refs[0].split("/").pop();this.delhash[h]=f.data.FBADeletionResults[b]}this.cpdboundhash={};for(var b=0;b<f.data.FBACompoundBounds.length;b++){var d=f.data.FBACompoundBounds[b].modelcompound_ref.split("/").pop();this.cpdboundhash[d]=f.data.FBACompoundBounds[b]}this.rxnboundhash={};for(var b=0;b<f.data.FBAReactionBounds.length;b++){var c=f.data.FBAReactionBounds[b].modelreaction_ref.split("/").pop();this.rxnboundhash[c]=f.data.FBAReactionBounds[b]}for(var b=0;b<this.modelgenes.length;b++){var i=this.modelgenes[b];this.genehash[i.id]&&(i.ko=this.genehash[i.id].ko),this.delhash[i.id]&&(i.growthFraction=this.delhash[i.id].growthFraction)}for(var b=0;b<this.modelreactions.length;b++){var j=this.modelreactions[b];this.rxnhash[j.id]&&(j.upperFluxBound=this.rxnhash[j.id].upperBound,j.lowerFluxBound=this.rxnhash[j.id].lowerBound,j.fluxMin=this.rxnhash[j.id].min,j.fluxMax=this.rxnhash[j.id].max,j.flux=this.rxnhash[j.id].value,j.fluxClass=this.rxnhash[j.id]["class"],j.disp_low_flux=j.fluxMin+"<br>("+j.lowerFluxBound+")",j.disp_high_flux=j.fluxMax+"<br>("+j.upperFluxBound+")"),this.rxnboundhash[j.id]&&(j.customUpperBound=this.rxnboundhash[j.id].upperBound,j.customLowerBound=this.rxnboundhash[j.id].lowerBound)}this.compoundFluxes=[],this.cpdfluxhash={};for(var b=0;b<this.modelcompounds.length;b++){var k=this.modelcompounds[b];this.cpdhash[k.id]&&(k.exchangerxn=" => "+k.name+"[e]",k.upperFluxBound=this.cpdhash[k.id].upperBound,k.lowerFluxBound=this.cpdhash[k.id].lowerBound,k.fluxMin=this.cpdhash[k.id].min,k.fluxMax=this.cpdhash[k.id].max,k.uptake=this.cpdhash[k.id].value,k.fluxClass=this.cpdhash[k.id]["class"],k.disp_low_flux=k.fluxMin+"<br>("+k.lowerFluxBound+")",k.disp_high_flux=k.fluxMax+"<br>("+k.upperFluxBound+")",this.cpdfluxhash[k.id]=k,this.compoundFluxes.push(k)),this.metprodhash[k.id]&&(k.maxProd=this.metprodhash[k.id].maximumProduction),this.cpdboundhash[k.id]&&(k.customUpperBound=this.cpdboundhash[k.id].upperBound,k.customLowerBound=this.cpdboundhash[k.id].lowerBound,this.cpdfluxhash[k.id]||this.compoundFluxes.push(k))}for(var b=0;b<this.biomasses.length;b++){var l=this.biomasses[b];this.biohash[l.id]?(l.upperFluxBound=this.biohash[l.id].upperBound,l.lowerFluxBound=this.biohash[l.id].lowerBound,l.fluxMin=this.biohash[l.id].min,l.fluxMax=this.biohash[l.id].max,l.flux=this.biohash[l.id].value,l.fluxClass=this.biohash[l.id]["class"],this.modelreactions.push(l)):(this.biohash[l.id]=l,l.upperFluxBound=1e3,l.lowerFluxBound=0,l.fluxMin=0,l.fluxMax=1e3,l.flux=0,l.fluxClass="Blocked",this.modelreactions.push(l)),l.disp_low_flux=l.fluxMin+"<br>("+l.lowerFluxBound+")",l.disp_high_flux=l.fluxMax+"<br>("+l.upperFluxBound+")"}for(var b=0;b<this.biomasscpds.length;b++){var m=this.biomasscpds[b];this.biohash[m.biomass]&&(m.bioflux=this.biohash[m.biomass].flux),this.metprodhash[m.id]&&(m.maxprod=this.metprodhash[m.id].maximumProduction)}},this.setData=function(a){f.data=a;var e=new d(this.runtime.getConfig("services.workspace.url",{token:this.runtime.service("session").getAuthToken()}));return new b.resolve(e.get_objects([{ref:a.fbamodel_ref}])).then(function(a){var b=new c({runtime:f.runtime});f.model=new b.KBaseFBA_FBAModel(f.modeltabs),f.model.setMetadata(a[0].info),f.model.setData(a[0].data),f.formatObject()})},this.ReactionTab=function(a){var b=f.rxnhash[a.id];if("undefined"==typeof b&&(b=f.biohash[a.id],"undefined"!=typeof b))return f.BiomassTab(a);var c=f.model.ReactionTab(a);return c&&"done"in c?(c.then(function(b){return f.ExtendReactionTab(a,b)}),c):f.ExtendReactionTab(a,c)},this.ExtendReactionTab=function(a,b){var c=f.rxnhash[a.id];return b.push({label:"Flux",data:c.flux}),b.push({label:"Min flux<br>(Lower bound)",data:c.disp_low_flux}),b.push({label:"Max flux<br>(Upper bound)",data:c.disp_high_flux}),b.push({label:"Class",data:c.fluxClass}),b},this.CompoundTab=function(a){var b=f.model.CompoundTab(a);return b&&"done"in b?(b.then(function(b){return f.ExtendCompoundTab(a,b)}),b):f.ExtendCompoundTab(a,b)},this.ExtendCompoundTab=function(a,b){var c=f.cpdhash[a.id];return b.push({label:"Exchange reaction",data:c.exchangerxn}),b.push({label:"Exchange flux",data:c.uptake}),b.push({label:"Min flux<br>(Lower bound)",data:c.disp_low_flux}),b.push({label:"Max flux<br>(Upper bound)",data:c.disp_high_flux}),b.push({label:"Class",data:c.fluxclass}),b},this.GeneTab=function(a){var b=f.model.GeneTab(a);return b&&"done"in b?(b.then(function(b){return f.ExtendGeneTab(a,b)}),b):f.ExtendGeneTab(a,b)},this.ExtendGeneTab=function(a,b){var c=f.genehash[a.id];return b.push({label:"Gene knocked out",data:c.ko}),b.push({label:"Fraction of growth with KO",data:c.growthFraction}),b},this.BiomassTab=function(a){var b=f.model.BiomassTab(a);return b&&"done"in b?(b.then(function(b){return f.ExtendBiomassTab(a,b)}),b):f.ExtendBiomassTab(a,b)},this.ExtendBiomassTab=function(a,b){var c=f.biohash[a.id];return b.push({label:"Flux",data:c.flux}),b.push({label:"Min flux<br>(Lower bound)",data:c.disp_low_flux,visible:1}),b.push({label:"Max flux<br>(Upper bound)",data:c.disp_high_flux,visible:1}),b.push({label:"Class",data:c.fluxClass,visible:1}),b},this.CompartmentTab=function(a){return f.model.CompartmentTab(a)}}c.prototype.KBaseFBA_FBA=e});