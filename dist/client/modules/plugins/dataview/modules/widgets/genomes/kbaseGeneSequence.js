define(["jquery","kb/common/html","kb/service/client/cdmi","kb/service/client/cdmiEntity","kb/service/client/workspace","kb/widget/legacy/widget"],function(a,b,c,d,e){"use strict";a.KBWidget({name:"KBaseGeneSequence",parent:"kbaseWidget",version:"1.0.0",options:{featureID:null,embedInCard:!1,genomeID:null,workspaceID:null,width:950,seq_cell_height:208,genomeInfo:null},init:function(a){return this._super(a),null===this.options.featureID?this:(this.cdmiClient=new c(this.runtime.getConfig("services.cdmi.url")),this.entityClient=new d(this.runtime.getConfig("services.cdmi.url")),this.render(),this.options.workspaceID?this.renderWorkspace():this.renderError,this)},render:function(){this.$messagePane=a("<div/>").addClass("kbwidget-message-pane hide"),this.$elem.append(this.$messagePane),this.$infoPanel=a("<div>").css("overflow","auto"),this.$infoTable=a("<table>").addClass("table table-striped table-bordered"),this.$elem.append(this.$infoPanel.append(this.$infoTable))},makeRow:function(b,c,d){var e=a("<tr>").append(a("<th>").append(b)).append(a("<td>").append(a("<div style='max-height:"+this.options.seq_cell_height+"px; overflow:scroll; font-family:monospace; background-color:"+d+"; border:1px solid transparent'>").append(c)));return e},renderWorkspace:function(){var a=this;if(this.showMessage(b.loading()),this.$infoPanel.hide(),this.options.genomeInfo)a.ready(this.options.genomeInfo);else{var c=this.buildObjectIdentity(this.options.workspaceID,this.options.genomeID),d=new e(this.runtime.getConfig("service.workspace.url"),{token:this.runtime.service("session").getAuthToken()});d.get_objects([c]).then(function(b){a.ready(b[0])})["catch"](function(b){a.renderError(b)})}},ready:function(a){var b=this;if(a.data.features){for(var c=null,d=0;d<a.data.features.length;d++)if(a.data.features[d].id===this.options.featureID){c=a.data.features[d];break}var e="No gene sequence found.";if(c.dna_sequence){e=c.dna_sequence;var f=50;if(e.length>f){for(var g="",h=0,i=0,d=0;(d+1)*f-1<e.length;d++)h=d*f,i=(d+1)*f-1,g+=e.substring(h,i)+"<br>";h+=f,i=e.length-1,h<e.length&&(g+=e.substring(h,i)+"<br>"),e=g}this.$infoTable.append(this.makeRow("Gene",e,"white"))}else{var b=this;b.cdmiClient.fids_to_dna_sequences([b.options.featureID],function(a){a[b.options.featureID]&&(e=a[b.options.featureID]);var c=50;if(e.length>c){for(var d="",f=0,g=0,h=0;(h+1)*c-1<e.length;h++)f=h*c,g=(h+1)*c-1,d+=e.substring(f,g)+"<br>";f+=c,g=e.length-1,f<e.length&&(d+=e.substring(f,g)+"<br>"),e=d}b.$infoTable.append(b.makeRow("Gene",e,"white"))},b.renderError)}var j="No protein sequence found.";if(c.protein_translation){j=c.protein_translation;var f=50;if(j.length>f){for(var k="",h=0,i=0,d=0;(d+1)*f-1<j.length;d++)h=d*f,i=(d+1)*f-1,k+=j.substring(h,i)+"<br>";h+=f,i=j.length-1,h<j.length&&(k+=j.substring(h,i)+"<br>"),j=k}}this.$infoTable.append(this.makeRow("Protein",j,"#f9f9f9"))}else this.renderError({error:"No genetic features found in the genome with object id: "+this.options.workspaceID+"/"+this.options.genomeID});this.hideMessage(),this.$infoPanel.show()},buildObjectIdentity:function(a,b){var c={};return/^\d+$/.exec(a)?c.wsid=a:c.workspace=a,/^\d+$/.exec(b)?c.objid=b:c.name=b,c},getData:function(){return{type:"Feature",id:this.options.featureID,workspace:this.options.workspaceID,title:"Gene Sequence"}},showMessage:function(b){var c=a("<span/>").append(b);this.$messagePane.empty().append(c).removeClass("hide")},hideMessage:function(){this.$messagePane.addClass("hide")},renderError:function(b){errString="Sorry, an unknown error occurred","string"==typeof b?errString=b:b.error&&b.error.message&&(errString=b.error.message);var c=a("<div>").addClass("alert alert-danger").append("<b>Error:</b>").append("<br>"+errString);this.$elem.empty(),this.$elem.append(c)}})});