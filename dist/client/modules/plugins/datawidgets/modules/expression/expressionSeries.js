define(["kb/widget/bases/dataWidget","kb/service/client/workspace","kb/service/utils","kb/common/html"],function(a,b,c,d){"use strict";function e(e){function f(a){var b=["Name","Workspace","KBID","Source","Genome","Type","Errors","Owner","Creation date"],c=Object.keys(a.data.genome_expression_sample_ids_map)[0],e=[[a.workspaceInfo.name,a.workspaceInfo.ws,a.data.regulome_id,c,a.data.type,a.data.importErrors,a.creator,a.created]],f=d.makeTableRotated({columns:b,rows:e,"class":"table table-striped table-bordered"});return f}function g(a){var b=["Gene Expression Samples"],c=a.map(function(a){return[a]}),e=d.makeTable({columns:b,rows:c,"class":"table table-striped table-bordered"});return e}function h(a){var b=[{id:d.genId(),label:"Overview",content:f(a.get("data"))},{id:d.genId(),label:"Expression Series",content:g(a.get("sampleData"))}];return d.makeTabs({tabs:b})}function i(a){var d=new b(a.runtime.getConfig("services.workspace.url"),{token:a.runtime.service("session").getAuthToken()}),e=a.get("params"),f=e.workspaceId+"/"+e.objectId+"/"+e.objectVersion;return d.get_objects([{ref:f}]).then(function(b){if(1===b.length){var d=b[0];return d.workspaceInfo=c.object_info_to_object(d.info),a.set("data",d),d}if(0===b.length)throw new Error("Sorry, no object found");if(b.length>1)throw new Error("Too many data objects found: "+b.length)}).then(function(a){var b=Object.keys(a.data.genome_expression_sample_ids_map)[0],c=a.data.genome_expression_sample_ids_map[b],e=c.map(function(a){return{ref:a}});return d.get_objects(e)}).then(function(b){var c=b.map(function(a){return a.data.id});a.set("sampleData",c)}).then(function(){a.set("ready",!0)})}return a.make({runtime:e.runtime,title:"Expression Series Widget",on:{initialContent:function(){return d.loading("Loading...")},fetch:function(){return i(this)},render:function(){return this.get("ready")?h(this):void 0}}})}return{make:function(a){return e(a)}}});