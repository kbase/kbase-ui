define([],function(){"use strict";function a(a){var b;if("number"==typeof a){if(b=Math.floor(a),b!==a)throw new Error("Invalid id - not an integer")}else{if("string"!=typeof a)throw new Error("Invalid id - must be number or string");if(!/^\d+$/.test(a))throw new Error("Invalid id - string cannot be converted to integer");b=parseInt(a)}if(0>=b)throw new Error("Invalid id - must be a positive integer");return b}function b(a){if("string"!=typeof a)return!1;if(/^\d+$/.test(a))throw new Error("A name must not be coercable to an integer");if(/[\s\/]/.test(a))throw new Error("A name must not contain a space or the / character.");return a}function c(a,b,c){if(void 0===a)throw new Error("The workspace id or name is required for an object ref");if(void 0===b)throw new Error("The object id or name is required for an object ref");var d,e,f,g;try{d=String(this.validateId(a))}catch(h){try{d=this.validateName(a)}catch(h){throw new Error("Workspace identifier not a valid id or name")}}try{e=String(this.validateId(b))}catch(h){try{e=this.validateName(b)}catch(h){throw new Error("Object identifier not a valid id or name")}}if(c)try{f=String(this.validateId(c))}catch(h){throw new Error("Invalid object version supplied")}return g=[d,e],void 0!==c&&g.push(f),g.join("/")}return{validateId:a,validateName:b,makeObjectRef:c}});