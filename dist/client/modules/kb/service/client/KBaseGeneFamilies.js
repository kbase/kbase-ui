define(["jquery","bluebird"],function(a,b){"use strict";function c(c,d,e){function f(){if(!i){if(i=!0,!window.console)return;console.log("DEPRECATION WARNING: '*_async' method names will be removed","in a future version. Please use the identical methods without","the'_async' suffix.")}}function g(c,d,e,f,g){var i=a.Deferred();"function"==typeof f&&i.done(f),"function"==typeof g&&i.fail(g);var l={params:d,method:c,version:"1.1",id:String(Math.random()).slice(2)},m=null,n=k&&"function"==typeof k?k():j.token?j.token:null;null!==n&&(m=function(a){a.setRequestHeader("Authorization",n)});var o=jQuery.ajax({url:h,dataType:"text",type:"POST",processData:!1,data:JSON.stringify(l),beforeSend:m,success:function(a,b,c){var d;try{var f=JSON.parse(a);d=1===e?f.result[0]:f.result}catch(g){return void i.reject({status:503,error:g,url:h,resp:a})}i.resolve(d)},error:function(a,b,c){var d;if(a.responseText)try{var e=JSON.parse(a.responseText);d=e.error}catch(f){d="Unknown error - "+a.responseText}else d="Unknown Error";i.reject({status:500,error:d})}}),p=i.promise();return p.xhr=o,b.resolve(p)}this.url=c;var h=c,i=!1;("string"!=typeof h||0===h.length)&&(h="https://kbase.us/services/gene_families");var j=d?d:{token:"",user_id:""},k=e;this.search_domains=function(a,b,c){return g("KBaseGeneFamilies.search_domains",[a],1,b,c)},this.search_domains_async=function(a,b,c){return f(),g("KBaseGeneFamilies.search_domains",[a],1,b,c)},this.version=function(a,b){return g("KBaseGeneFamilies.version",[],1,a,b)},this.version_async=function(a,b){return f(),g("KBaseGeneFamilies.version",[],1,a,b)}}return c});