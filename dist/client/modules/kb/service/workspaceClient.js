define(["bluebird","kb/common/utils","kb/service/utils","kb/service/client/workspace"],function(a,b,c,d){"use strict";return Object.create({},{init:{value:function(a){if(!a.url)throw"The workspace client url is not defined";return this.workspaceClient=new d(a.url,{token:a.authToken}),this}},isValidNarrative:{value:function(a){return a.metadata.narrative&&/^\d+$/.test(a.metadata.narrative)&&"true"!==a.metadata.is_temporary?!0:!1}},applyNarrativeFilter:{value:function(a,b){return!0}},getNarratives:{value:function(b){return new a(function(d,e){a.resolve(this.workspaceClient.list_workspace_info(b.params)).then(function(f){var g,h,i=[];for(g=0;g<f.length;g+=1)h=c.workspace_metadata_to_object(f[g]),this.isValidNarrative(h)&&this.applyNarrativeFilter(b.filter)&&i.push(h);var j=i.map(function(a){return{ref:a.id+"/"+a.metadata.narrative}});a.resolve(this.workspaceClient.get_object_info_new({objects:j,ignoreErrors:1,includeMetadata:1})).then(function(a){var b,e=[];for(b=0;b<a.length;b+=1)if(a[b]){var f=c.object_info_to_object(a[b]);"Narrative"===f.typeName?e.push({workspace:i[b],object:f}):console.log("WARNING: workspace "+f.wsid+" object "+f.id+" is not a valid Narrative object")}else console.log("WARNING: workspace "+e[b].workspace.id+" does not contain a matching narrative object");d(e)}.bind(this))["catch"](function(a){e(a)})}.bind(this))["catch"](function(a){e(a)})}.bind(this))}},getPermissions:{value:function(c){return new a(function(d,e,f){var g=c.map(function(b){return a.resolve(this.workspaceClient.get_permissions({id:b.workspace.id}))}.bind(this)),h=R.getUsername();a.all(g).then(function(a){var e,f;for(e=0;e<a.length;e+=1)f=c[e],f.permissions=b.object_to_array(a[e],"username","permission").filter(function(a){return a.username===h||"*"===a.username||a.username===f.workspace.owner?!1:!0}).sort(function(a,b){return a.username<b.username?-1:a.username>b.username?1:0});d(c)}.bind(this))["catch"](function(a){e(a)})}.bind(this))}},getObject:{value:function(b,d){return new a(function(e,f){var g=[{ref:b+"/"+d}];a.resolve(this.workspaceClient.get_object_info_new({objects:g,ignoreErrors:1,includeMetadata:1})).then(function(a){if(0===a.length)return void f("Object not found");if(a.length>1)return void f("Too many ("+a.length+") objects found.");if(null===a[0])return f("Null object returned"),void console.log(a);var b=c.object_info_to_object(a[0]);e(b)}.bind(this))["catch"](function(a){f(a)})}.bind(this))}},translateRefs:{value:function(b,c){return new a(function(c,d){var e=b.map(function(a){return{ref:a}});a.resolve(this.workspaceClient.get_object_info_new({objects:e,ignoreErrors:1,includeMetadata:1})).then(function(a){var d,e={};for(d=0;d<a.length;d+=1){var f,g,h=a[d],i=h[2],j=(i.split(".")[0],i.slice(i.indexOf(".")+1)),k=j.split("-")[0],l=h[7]+"/"+h[1];switch(k){case"FBA":g="fbas/";break;case"FBAModel":g="models/";break;case"Media":f="media/";break;case"Genome":f="genomes/";break;case"MetabolicMap":f="maps/";break;case"PhenotypeSet":f="phenotype/"}var m='<a href="#/'+f+l+'">'+l+"</a>";e[b[d]]={link:m,label:l}}c(e)})["catch"](function(a){console.log("ERROR"),console.log(a),d(a)})}.bind(this))}}})});